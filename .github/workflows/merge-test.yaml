name: Merge Tests
on: 
  push:
    branches:
      - main
      - 'release/*'

jobs:
  get-branch:
    runs-on: ubuntu-18.04
    outputs:
      branch: ${{ steps.get-branch.outputs.branch }}
    steps:
      - uses: actions/checkout@v2
      - run: git branch --show-current
      - name: Get current branch
        id: get-branch
        run: echo "::set-output name=branch::$(git branch --show-current)"
  base-tests:
    runs-on: ubuntu-18.04
    needs: get-branch
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.get-branch.outputs.branch}}
      - name: "⚙️ Install sparsezoo dependencies"
        run: pip3 install -U pip && pip3 install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "⚙️ Install dependencies"
        run: pip3 install .[dev]
      - name: "🔬 Running base tests"
        run: make test
  deepsparse-tests:
    runs-on: ubuntu-18.04
    needs: get-branch
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.get-branch.outputs.branch}}
      - name: "⚙️ Install sparsezoo dependencies"
        run: pip3 install -U pip && pip3 install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "⚙️ Install dependencies"
        run: pip3 install .[dev,deepsparse]
      - name: "🔬 Running deepsparse tests"
        run: make test TARGETS=deepsparse
  keras-tests:
    runs-on: ubuntu-18.04
    needs: get-branch
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.get-branch.outputs.branch}}
      - name: "⚙️ Install sparsezoo dependencies"
        run: pip3 install -U pip && pip3 install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "⚙️ Install dependencies"
        run: pip3 install .[dev,tf_keras]
      - name: "🔬 Running keras tests"
        run: make test TARGETS=keras
  onnx-tests:
    runs-on: ubuntu-18.04
    needs: get-branch
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.get-branch.outputs.branch}}
      - name: "⚙️ Install sparsezoo dependencies"
        run: pip3 install -U pip && pip3 install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "⚙️ Install dependencies"
        run: pip3 install .[dev,torchvision]
      - name: "🔬 Running onnx tests"
        run: make test TARGETS=onnx
  pytorch-tests:
    runs-on: ubuntu-18.04
    needs: get-branch
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.get-branch.outputs.branch}}
      - name: "⚙️ Install sparsezoo dependencies"
        run: pip3 install -U pip && pip3 install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "⚙️ Install dependencies"
        run: pip3 install .[dev,torchvision]
      - name: "🔬 Running pytorch tests"
        run: make test TARGETS=pytorch
  tensorflow-v1-tests:
    runs-on: ubuntu-18.04
    needs: get-branch
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: "neuralmagic/sparsezoo"
          path: "sparsezoo"
          ref: ${{needs.get-branch.outputs.branch}}
      - name: "⚙️ Install sparsezoo dependencies"
        run: pip3 install -U pip && pip3 install setuptools sparsezoo/
      - name: "Clean sparsezoo directory"
        run: rm -r sparsezoo/
      - name: "⚙️ Install dependencies"
        run: pip3 install .[dev,tf_v1]
      - name: "🔬 Running tensorflow_v1 tests"
        run: make test TARGETS=tensorflow_v1
